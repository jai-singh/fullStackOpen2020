{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Filter.js","services/phonebook.js","components/Notification.js","app.js","index.js"],"names":["Persons","directory","removePerson","map","person","key","name","number","value","onClick","PersonForm","props","newName","onChange","handleNewName","newNumber","handleNewNumber","type","addPerson","Filter","searchQuery","performSearch","baseURL","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","typeOfNotification","isError","className","App","useState","persons","setPersons","setNewName","setNewNumber","searchResult","setSearchResult","setSearchQuery","setMessage","setIsError","useEffect","phonebookService","addPersonToList","update","personObject","newList","setTimeout","catch","error","displayError","concat","changeSearchResult","query","personList","list","reduce","personFound","toLowerCase","search","event","target","length","preventDefault","foundIndex","findIndex","window","confirm","personName","find","personsList","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5046da60.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Persons = ({directory, removePerson}) => {\r\n    return(\r\n    <div>\r\n      {\r\n      directory.map(person => \r\n      <div key={person.name}>{person.name} {person.number} \r\n        <button value={person.name} onClick ={removePerson}>delete</button>\r\n      </div>)\r\n      }\r\n    </div>\r\n    )       \r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n     return(\r\n    <form>\r\n            <h3>Add a new</h3>\r\n            <div>\r\n            name: <input value={props.newName} onChange={props.handleNewName}/>\r\n            </div>\r\n            <div>\r\n            number: <input value={props.newNumber} onChange={props.handleNewNumber}/>\r\n            </div>\r\n            <div>\r\n            <button type=\"submit\" onClick={props.addPerson}>add</button>\r\n            </div>\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    return(\r\n      <div>\r\n        filter shown with <input value={props.searchQuery} onChange={props.performSearch}/>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import axios from 'axios'\r\nconst baseURL = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseURL)\r\n            .then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios\r\n            .post(baseURL,newObject)\r\n            .then(response => response.data)\r\n}\r\n\r\nconst update = (id,newObject) => {\r\n    return axios    \r\n            .put(`${baseURL}/${id}`,newObject)\r\n            .then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    return axios\r\n            .delete(`${baseURL}/${id}`)\r\n            .then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React from 'react'\r\n\r\nconst Notification = ({message,isError}) => {\r\n    const typeOfNotification = isError ? 'error' : 'message'\r\n    if(message!==''){\r\n        return(\r\n            <div className={typeOfNotification}>\r\n                {message}\r\n            </div>\r\n        )\r\n    }else{\r\n        return(null)\r\n    } \r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Persons from './components/Persons'\r\nimport PersonForm from './components/PersonForm'\r\nimport Filter from './components/Filter'\r\nimport phonebookService from './services/phonebook'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ searchResult, setSearchResult] = useState([])\r\n  const [ searchQuery, setSearchQuery] = useState('')\r\n  const [ message, setMessage] = useState('')\r\n  const [ isError, setIsError] = useState(false)\r\n\r\n  useEffect(() => {\r\n    phonebookService\r\n      .getAll()\r\n      .then( data => setPersons(data))\r\n  },[])\r\n\r\n  const addPersonToList = (update=false,id=-1) => {\r\n    const personObject = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n    if(personObject.name!==''){\r\n      if(!update){\r\n        phonebookService\r\n          .create(personObject)\r\n          .then(data => setPersons(persons.concat(data)))\r\n          .then(() => { \r\n            setMessage(`Added ${personObject.name}`)\r\n            setIsError(false)\r\n            setTimeout(() => {\r\n              setMessage('')\r\n            },5000)          \r\n          })\r\n          .catch(error => {\r\n            displayError()\r\n          }) \r\n      }else{\r\n        phonebookService\r\n          .update(id,personObject)\r\n          .then(data => {\r\n            const newList = persons.map( person => person.id!==id ? person : data)\r\n            setPersons(newList)                       \r\n          })\r\n          .then(() => { \r\n            setMessage(`Updated details about ${personObject.name}`)\r\n            setIsError(false)\r\n            setTimeout(() => {\r\n              setMessage('')\r\n            },5000)\r\n          })\r\n          .catch(error => {\r\n            displayError()\r\n          }) \r\n      }\r\n      \r\n    }\r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n\r\n  const displayError = () => {\r\n    setMessage(`Name and phone number should be at least 3 letters and 8 digits long respectively`)\r\n    setIsError(true)\r\n    setTimeout(() => {\r\n      setMessage('')\r\n    },5000)     \r\n  }\r\n\r\n  const addPerson = (event) =>{\r\n    event.preventDefault();    \r\n    const foundIndex = persons.findIndex((person) => (person.name.toLowerCase()===newName.toLowerCase()))    \r\n    if(foundIndex !== -1){\r\n      const result = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\r\n      if(result){\r\n        addPersonToList(true,persons[foundIndex].id)\r\n        return\r\n      }\r\n    }else{\r\n      addPersonToList()         \r\n    }\r\n  }\r\n  const handleNewName = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNewNumber = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const changeSearchResult =  (query,personList=persons) => {\r\n    const list = personList.reduce((personFound,person) => {\r\n      if(person.name.toLowerCase().search(query.toLowerCase()) !==-1 ){\r\n        return personFound.concat(person)\r\n      }else{\r\n        return personFound\r\n      }\r\n      },[]\r\n      )\r\n      setSearchResult(list)\r\n   }\r\n\r\n  const performSearch = (event) => {\r\n    const query = event.target.value \r\n    setSearchQuery(query)\r\n    if(query.length!==0){\r\n      changeSearchResult(query)\r\n    }else{\r\n      setSearchResult([])\r\n    }\r\n  }\r\n\r\n  const removePerson = (event) => {\r\n    const personName = event.target.value\r\n    const result = window.confirm(`Delete ${personName} ?`)\r\n    if(result){\r\n      const found = persons.find((person) => (person.name===personName))\r\n      const id = found.id\r\n      phonebookService\r\n        .remove(id)\r\n        .then(() => {\r\n          const personsList = persons.filter(person => person.id !== id)\r\n          setPersons(personsList)\r\n          changeSearchResult(searchQuery,personsList)\r\n        })\r\n        .catch(error => {\r\n          setMessage(`Information of ${personName} has already been removed from server`)\r\n          setIsError(true)\r\n          setTimeout(() => {\r\n            setMessage('')\r\n          },5000)\r\n          const personsList = persons.filter(person => person.id !== id)\r\n          setPersons(personsList)\r\n          changeSearchResult(searchQuery,personsList)\r\n        })\r\n    }\r\n    \r\n  } \r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} isError={isError}/>\r\n      <Filter searchQuery={searchQuery} performSearch={performSearch}/>\r\n      <PersonForm newName={newName} handleNewName={handleNewName}\r\n        newNumber={newNumber} handleNewNumber={handleNewNumber}\r\n        addPerson={addPerson}/>\r\n      <h3>Numbers</h3>      \r\n      <Persons directory={searchResult} removePerson={removePerson}/>     \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}